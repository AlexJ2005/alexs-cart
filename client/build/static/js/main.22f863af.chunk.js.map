{"version":3,"sources":["images/shop.png","Products.js","TotalCost.js","App.js","Cart.js","MainApp.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Products","props","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this","react_default","a","createElement","className","style","fontSize","product","name","price","amount","onClick","onIncrement","React","Component","TotalCost","totalPrice","total","current","react_router_dom","to","paddingTop","src","require","alt","width","height","margin","paddingRight","products","reduce","App","loading","clearCart","src_TotalCost","map","src_Products","key","_id","increment","Cart","_Component","apply","arguments","inherits","createClass","value","incrementCart","subtractCart","MainApp","deleteFromCart","id","axios","patch","concat","then","res","setState","data","subtractFromCart","toConsumableArray","state","index","indexOf","objectSpread","fetchItems","get","method","headers","Content-Type","Access-Control-Allow-Origin","catch","err","console","log","response","_this2","react_router","path","render","src_Cart","exact","src_App_0","Boolean","window","location","hostname","match","ReactDOM","src_MainApp","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.22f863af.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/shop.01ad5bbc.png\";","import React from 'react';\nimport './App.css';\n\n\nclass Products extends React.Component {\n\n\n    constructor(props) {\n        super(props);\n\n    }\n\n\n    render() {\n\n        return (\n            <div className=\"productsGrid\" >\n                <p style={{ fontSize: '20px' }}>{this.props.product.name}</p>\n                <p>{this.props.product.price} Dollars</p>\n                <p>Amount: {this.props.product.amount}</p>\n                <button className=\"addButton\" onClick={() => this.props.onIncrement(this.props.product)}>Add to cart</button>\n\n            </div>\n        )\n    }\n}\n\nexport default Products;","import React from 'react';\nimport './App.css';\nimport { Link } from \"react-router-dom\";\n\n\n\nclass TotalCost extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n    }\n\n    totalPrice = (total, current) => {\n        return total + current.amount * current.price;\n    }\n\n    render() {\n        let startvalue = 0;\n        return (\n\n            <div>\n                <div className=\"totalCost-elements\">\n                    <Link to='/cart'>  <img style={{ paddingTop: \"40px\" }} src={require('./images/shop.png')} alt=\"shopping cart\" width=\"120\" height=\"100\" ></img> </Link>\n                    <p style={{ margin: \"0px\", paddingTop: \"80px\", paddingRight: \"200px\" }}>\n                        {this.props.products.reduce(this.totalPrice, startvalue)}\n                        $\n                    </p>\n\n                </div>\n            </div>\n\n        )\n    }\n}\n\nexport default TotalCost;","import React, { Component } from 'react';\nimport './App.css';\nimport Products from './Products'\nimport TotalCost from './TotalCost'\nimport Axios from 'axios';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\n\n\n\n\nclass App extends Component {\n\n\n\n\n  render() {\n    return (\n\n\n      <div>\n\n        {this.props.loading ? <div>loading</div> : (\n          <div>\n\n            <header className=\"shopping-header\">\n              <h1>Shopping cart</h1>\n              <button className=\"addButton\" onClick={() => this.props.clearCart(this.props.products)}>Clear cart</button>\n              <TotalCost className=\"totalCost\" products={this.props.products} />\n            </header>\n            <div className=\"products-container\">\n\n              {this.props.products.map((product) =>\n                <Products className=\"productsGrid\" product={product} key={product._id} onIncrement={this.props.increment} />\n              )}\n\n            </div>\n          </div>\n        )}\n\n\n      </div>\n\n\n    )\n  }\n}\n\nexport default App;\n","import React, { Component } from 'react'\nimport { Link } from \"react-router-dom\";\n\n\nexport class Cart extends Component {\n    render() {\n        return (\n            <div>\n                <Link to='/' className=\"home-button\">Homepage</Link>\n                {this.props.products.map(product => {\n                    if (product.amount > 0) {\n                        return (<div key={product._id} className=\"products-cart-container\">\n                            <p className=\"products-cart\" >{product.name} {product.amount}</p>\n                            <button onClick={() => this.props.incrementCart(product)} className=\"delete-button\">+</button>\n                            <button onClick={() => this.props.subtractCart(product)} className=\"delete-button\">-</button>\n                        </div>\n                        )\n                    }\n                })}\n\n            </div>\n        )\n    }\n}\n\nexport default Cart\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport App from './App';\nimport Cart from './Cart';\nimport axios from 'axios'\n\nexport class MainApp extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            products: []\n        }\n\n        //Api call\n\n        this.fetchItems();\n\n    }\n\n    deleteFromCart = (id) => {\n        // Deletes the item from the cart by changing the amount to zero\n        axios.patch(`https://localhost:5000/api/${id}`, { amount: 0 }).then((res) => this.setState({ products: res.data.products }))\n    }\n\n    subtractFromCart = (product) => {\n        const products = [...this.state.products];\n        const index = products.indexOf(product);\n        products[index] = { ...product }\n        products[index].amount--;\n\n        axios.patch(`https://localhost:5000/api/${product._id}`, { amount: products[index].amount }).then(res => this.setState({ products: res.data.products }))\n    }\n\n\n    fetchItems = () => {\n        //Gets all the data from the api and adds it to the state\n        axios.get('https://localhost:5000/api',\n            {\n                method: \"GET\",\n                headers: {\n                    \"Content-Type\": \"text/plain\",\n                    \"Access-Control-Allow-Origin\": \"https://localhost:5000/api\"\n                }\n            })\n            .then(res => {\n                this.setState({ products: res.data.products, loading: false });\n            })\n            .catch(err => console.log(err))\n\n    }\n\n\n    increment = product => {\n        //Makes a copy of the product that is passed as an argument, then gets the index and adds one to the amount property\n        const products = [...this.state.products];\n        const index = products.indexOf(product);\n        products[index] = { ...product }\n        products[index].amount++;\n        //  this.setState(({ products }))\n\n        axios.patch(`https://localhost:5000/api/${product._id}`, { amount: products[index].amount }).then(response => this.setState({ products: response.data.products }))\n\n    }\n\n\n    clearCart = product => {\n        //Changes all the products amount to zero\n\n        product.map((products) => {\n            axios.patch(`https://localhost:5000/api/${products._id}`, { amount: 0 }).then(response => this.setState({ products: response.data.products })).catch(err => console.log(err))\n        })\n\n\n    }\n\n    render() {\n        return (\n            <Router>\n                <Route path='/cart' render={() => <Cart incrementCart={this.increment} subtractCart={this.subtractFromCart} products={this.state.products}></Cart>} />\n                <Route path='/' exact render={() => <App deleteFromCart={this.deleteFromCart} loading={this.state.loading} products={this.state.products} clearCart={this.clearCart} increment={this.increment}></App>} />\n            </Router>\n        )\n    }\n}\n\nexport default MainApp\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport MainApp from './MainApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<MainApp />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}